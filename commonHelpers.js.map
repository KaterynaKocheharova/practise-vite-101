{"version":3,"file":"commonHelpers.js","sources":["../src/js/LSHelpers.js","../src/js/refs.js","../src/js/consts.js","../src/main.js"],"sourcesContent":["export function getLocalStorage(key) {\n    return JSON.parse(localStorage.getItem(key))\n}\n\nexport function setLocalStorage(key, data) {\n    localStorage.setItem(key, JSON.stringify(data));\n}","export const refs = {\n    form: document.querySelector(\"#task-form\"),\n    taskEl: document.querySelector('#task-list'),\n}","export const TASK_KEY = \"tasks\";","import { nanoid } from 'nanoid'\nimport { getLocalStorage, setLocalStorage } from './js/LSHelpers';\nimport { refs } from './js/refs';\nimport { TASK_KEY } from './js/consts';\n\nlocalStorageDataMarkup()\n\nrefs.form.addEventListener(\"submit\", onTaskSubmit);\n\nfunction onTaskSubmit(event) {\n    event.preventDefault();\n    const inputValue = event.currentTarget.elements.taskName.value.trim();\n    if (!inputValue) return;\n    createListEl(inputValue);\n    console.log(inputValue);\n    event.currentTarget.reset();\n}\n\nfunction createListEl(textValue) {\n    const id = nanoid();\n    refs.taskEl.insertAdjacentHTML(\"beforeend\", `<li id=${id}>${textValue}<button class=\"deleteBtn\" type='button'>x</button></li>`)\n    saveDataToLS(id, textValue);\n}\n\nfunction saveDataToLS(id, task) {\n    const dataArray = getLocalStorage(TASK_KEY) || [];\n\n    const obj = {\n        task,\n        id\n    }\n\n    dataArray.push(obj);\n\n    setLocalStorage(TASK_KEY, dataArray);\n}\n\nfunction localStorageDataMarkup() {\n    const data = getLocalStorage(TASK_KEY)\n\n    if (!data) return\n\n    const dataMarkUp = data.map(item => {\n        return `<li id=${item.id}> ${item.task} <button class=\"deleteBtn\"  type='button'>x</button></li >`\n    }).join('')\n\n    refs.taskEl.insertAdjacentHTML(\"beforeend\", dataMarkUp)\n}\n\nrefs.taskEl.addEventListener(\"click\", onRemoveTask);\n\nfunction onRemoveTask(event) {\n    if (!event.target.classList.contains(\"deleteBtn\")) return;\n\n    console.log(event.target.parentNode.id);\n\n    const id = event.target.parentNode.id;\n\n    const dataArray = getLocalStorage(TASK_KEY)\n\n    const newData = dataArray.filter(listItem => listItem.id !== id);\n\n    setLocalStorage(TASK_KEY, newData)\n\n    event.target.parentNode.remove();\n\n}\n\n"],"names":["getLocalStorage","key","setLocalStorage","data","refs","TASK_KEY","localStorageDataMarkup","onTaskSubmit","event","inputValue","createListEl","textValue","id","nanoid","saveDataToLS","task","dataArray","obj","dataMarkUp","item","onRemoveTask","newData","listItem"],"mappings":"svBAAO,SAASA,EAAgBC,EAAK,CACjC,OAAO,KAAK,MAAM,aAAa,QAAQA,CAAG,CAAC,CAC/C,CAEO,SAASC,EAAgBD,EAAKE,EAAM,CACvC,aAAa,QAAQF,EAAK,KAAK,UAAUE,CAAI,CAAC,CAClD,CCNO,MAAMC,EAAO,CAChB,KAAM,SAAS,cAAc,YAAY,EACzC,OAAQ,SAAS,cAAc,YAAY,CAC/C,ECHaC,EAAW,QCKxBC,EAAwB,EAExBF,EAAK,KAAK,iBAAiB,SAAUG,CAAY,EAEjD,SAASA,EAAaC,EAAO,CACzBA,EAAM,eAAc,EACpB,MAAMC,EAAaD,EAAM,cAAc,SAAS,SAAS,MAAM,OAC1DC,IACLC,EAAaD,CAAU,EACvB,QAAQ,IAAIA,CAAU,EACtBD,EAAM,cAAc,QACxB,CAEA,SAASE,EAAaC,EAAW,CAC7B,MAAMC,EAAKC,IACXT,EAAK,OAAO,mBAAmB,YAAa,UAAUQ,CAAE,IAAID,CAAS,yDAAyD,EAC9HG,EAAaF,EAAID,CAAS,CAC9B,CAEA,SAASG,EAAaF,EAAIG,EAAM,CAC5B,MAAMC,EAAYhB,EAAgBK,CAAQ,GAAK,CAAA,EAEzCY,EAAM,CACR,KAAAF,EACA,GAAAH,CACH,EAEDI,EAAU,KAAKC,CAAG,EAElBf,EAAgBG,EAAUW,CAAS,CACvC,CAEA,SAASV,GAAyB,CAC9B,MAAMH,EAAOH,EAAgBK,CAAQ,EAErC,GAAI,CAACF,EAAM,OAEX,MAAMe,EAAaf,EAAK,IAAIgB,GACjB,UAAUA,EAAK,EAAE,KAAKA,EAAK,IAAI,4DACzC,EAAE,KAAK,EAAE,EAEVf,EAAK,OAAO,mBAAmB,YAAac,CAAU,CAC1D,CAEAd,EAAK,OAAO,iBAAiB,QAASgB,CAAY,EAElD,SAASA,EAAaZ,EAAO,CACzB,GAAI,CAACA,EAAM,OAAO,UAAU,SAAS,WAAW,EAAG,OAEnD,QAAQ,IAAIA,EAAM,OAAO,WAAW,EAAE,EAEtC,MAAMI,EAAKJ,EAAM,OAAO,WAAW,GAI7Ba,EAFYrB,EAAgBK,CAAQ,EAEhB,OAAOiB,GAAYA,EAAS,KAAOV,CAAE,EAE/DV,EAAgBG,EAAUgB,CAAO,EAEjCb,EAAM,OAAO,WAAW,QAE5B"}